Convenção de diretórios

*Pacotes*

Formatos -
Estudos(edu)
Comercial(com)
Organizacional(org)
OpenSource(opensource/org)
Desenvolvimento independente(io)


Exemplo ~~

Empresa HyperTech

com.hypertech.nomedoprojeto{

    com.hypertech.nomedoprojeto ~~ Exemplos

    (com.hypertech.nomedoprojeto.app)
    (com.hypertech.nomedoprojeto.model)
    (com.hypertech.nomedoprojeto.service)
    (com.hypertech.nomedoprojeto.util)
}

#Variáveis sempre no singular a menos que sejam referentes a arrays
Não alterne entre idiomas na hora de nomear variáveis

#Os métodos deverão ser nomeados como verbos, através de uma "mistura" de letras maiúsculas e minúsculas

somar(int n1, int2){}

abrirConexao(){}

calcularImprimir(){} - ERRADO, DEVERIA SER UM OU OUTRO, NÃO DUAS AÇÕES AO MESMO TEMPO



#Tipo primitivos de variáveis :

int, 4 bytes

byte, 1 bytes

short, 2 byte

long, 8 bytes

float, 4 bytes

double, 8 bytes

boolean,

char

Declaração de variáveis :

Tipo nomeVariavel <atribuicaoDeValorOpcional>

* quando eu não informo o valor de uma variavel( Ex: int idade;) cada tipo de variável vai atribuir um valor padrão do tipo

* Números tipo long devem terminar com L para que o Java saiba que não se trata de um int e sim um long : long = 129099L


podemos guardar um short dentro de uma int mas não ao contrario

A palavra de constante usada é final e escrita em caixa alta : final double VALORIMUTAVEL = 3.14;



Diferença de protected para private - private só se usa dentro da mesma classe, protected pode ser dentro da subclasse
implica o uso de herança

Abstract - classe que não pode ser instanciada ou método que precisa ser implementado por uma subclasse não abstrata

Extends - Indica a superclasse que a subclasse está estendendo

Final - Impossibilita que uma classe seja estendida

Interface - especifica uma interface

Native - indica que um método está escrito em uma linguagem dependente de plataforma, como o C

New - Instancia um novo objeto, chamado seu construtor

Static - Faz um método ou váriavel pertencer à classe ao invés de as instancias

Strictfp: Usado em frente a um método ou classe para indicar que os números de ponto flutuante seguirão as regras de ponto
flutuante

synchronized: método acessado por uma thread de uma vez

transient: impede que a informação seja salva, sera sempre reinicializada

volatile: indica que a variavel pode ser alterada no uso de threads


Controle de fluxo:

Break: Quebra o loop de código:

Case: Executa um bloco de código dependendo da condição switch

Continue: pula um bloco específico de código



Arquivo - Antes da Classe - package,import,static

Classe - public ou protected ou private + final ou abstract + extends ou implements

Método - public ou protected ou private + static ou final ou abstract + void e return

Atributo - public ou protected ou private + static ou final + tipo primitivo


package + import

throws - dispara uma exceção

throw - geração de uma exceção




